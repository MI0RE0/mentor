from django.shortcuts import render, redirect
from .models import Title, Questions
import json
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
import random

def index(request):
    return render(request, 'index.html')
def main(request): 
    data = Title.objects.values('name')
    
    return render(request, 'main_base.html',{'data':data})




@csrf_exempt
def question_box(request):
    if request.method == "POST":
        try:
            body = json.loads(request.body.decode('utf-8'))
            title_name = body.get('thistitle')
            print(title_name)
            #タイトルエラー
            if not title_name:
                return JsonResponse({'error': 'タイトル名が違う'}, status=400)
            
            #[]初期化
            if 'used_numbers' not in  request.session:
                request.session['used_numbers'] = []
                
            #sessionから使用済みに数字を収得して同じ番号の出力を防止
            number_list = list(Questions.objects.filter(title__name=title_name).values_list('number', flat=True))
            max_num = max(number_list)
            all_numbers = set(range(1,max_num + 1))
            used_numbers = set(request.session['used_numbers'])
            available_num = all_numbers - used_numbers
            
            #available_numが0になったら初期化
            if not available_num:
                request.session['used_numbers'] = []
                return JsonResponse({'end': 'end'})
                
            #使用済みの数字をsessionに保存
            num = random.choice(list(available_num))
            request.session['used_numbers'].append(num)
            request.session.modified = True
            
            #カウント制限
            count = body.get('count')
            total_counts = body.get('total_counts')
            print(total_counts)
            if count > total_counts:
                return JsonResponse({'end':'end'})
                
            
            #title = Title.objects.get(name=title_name) 
            #questions = Questions.objects.filter(number = count).values('questions', 'answers', 'number').first()
            questions = Questions.objects.select_related('title').filter(title__name=title_name, number=num).values('questions', 'answers', 'number','descriptions','images_path').first()
            
            print(questions['images_path'])
            return JsonResponse({'name': title_name, 'questions':questions['questions'], 'answers':questions['answers'],'descriptions':questions['descriptions'],'images_path':questions['images_path']})
    
        except Title.DoesNotExist:
            return JsonResponse({'error': 'このタイトルのデータはありません'}, status=404)
        except json.JSONDecodeError:
            return JsonResponse({'error': 'データが不正'}, status=400)

    return JsonResponse({'error': 'リクエストメソッドがPOST以外になってる'}, status=405)

def save_data(request):
    title_name = '本免許問題集'

    # 質問リスト（番号, 質問文, 回答（"o" or "x"））
    question_list = [
    (1, "日常点検をするときは、灯火類を点灯させたり、方向指示器を点滅させて点検する。", "o", "本文の通り"),
    (2, "エンジンなどから水やオイルなどがもれるのは、たとえその量が少量であっても異常である。", "o", "本文の通り"),
    (3, "この標識は、道路の右側部分へはみ出して追い越すことを禁止している。", "o", "本文の通り"),
    (4, "自動車を転回させる場合の合図は右折と同じ要領でおこない、安全確認をしなければならない。", "o", "本文の通り"),
    (5, "四輪車の運転者は、左折しようとするとき、バックミラーでは見えない部分に二輪車や自転車がいることを予測し、方向指示器により自分の意思を知らせることが必要である。", "o", "本文の通り"),
    (6, "この標識があり、パーキングメーターが設置されている場所で60分をこえて駐車するときは、新たに料金を追加すれば引き続き同じ場所に駐車することができる。", "x", "1台の車が継続して駐車できるのは６０分が限度であり、料金を追加してもその時間を超えて駐車することはできません。"),
    (7, "この標識は、自動車や原動機付自転車及び軽車両は通行できないことを表わしている。", "x", "この標識は「自動車組み合わせ通行止め」で、軽車両は通行できます。「車両通行止め」の標識の場合は軽車両も通行できません。"),
    (8, "大型特殊免許で運転できるのは、大型特殊自動車、大型自動車、中型自動車、小型特殊自動車、原動機付自転車である。", "x", "大型自動車は運転できません。"),
    (9, "一般の車両は、交差点や交差点の付近で緊急自動車が近づいてきた場合は、交差点をさけて道路の左側に寄って一時停止をしなければならない。", "o", "本文の通り"),
    (10, "仮運転免許では、練習又は路上試験（技能検定）を受ける場合のほかは路上で運転してはならない。", "o", "本文の通り"),
    (11, "四輪車の運転者は、二輪車より優越感を持ち、二輪車を軽視する傾向がある。", "o", "本文の通り"),
    (12, "進路変更をするときは、まず安全確認をしてから方向指示器で合図を出す。", "o", "設問の通りです。まず安全確認をしてから合図を出し、更に再確認をしてから行動を開始するのがより安全です。"),
    (13, "信号機の信号が赤色になっても、交差点ですでに右折している車はそのまま進行することができる。", "o", "本文の通り"),
    (14, "歩道の縁石に図のような黄色の標示がしてあるときは、その場所に駐車も停車もしてはならない。", "o", "このように黄色の実線が引かれているのは「駐停車禁止」を表します。黄色の破線は「駐車禁止」です。"),
    (15, "この標識は、「標識による駐車禁止の区間の終わり」を表わしている。", "o", "本文の通り"),
    (16, "駐車禁止の場所であっても荷物の積みおろしの場合に限って、時間に関係なく駐車が認められる。", "x", "荷物の積みおろしでも５分を超えると駐車になります。駐車禁止場所では違反になります。"),
    (17, "車両は、車両通行帯の有無に関係なく、トンネルの中は追い越しが禁止されている。", "x", "本文の通り"),
    (18, "自動車や原動機付自転車は、交通が混雑している道路で路側帯があるときには、その路側帯の中を通行することができる。", "x", "路側帯は歩道と同じような場所です。自動車も原動機付自転車も路側帯の中を通行してはいけません。"),
    (19, "バスや路面電車の運行中、たとえ停留所の標示板から10メートル以内の場所であっても、人の乗り降りのためなら停車することができる。", "x", "人の乗り降りのためであっても、駐停車禁止場所に車を止めてはいけません。駐車禁止場所であれば人の乗り降りのための停車は認められます。"),
    (20, "車両は、停留所に止まっている路線バスに追いついたときは、一時停止しバスが発進するまでその横を通過してはならない。", "x", "本文の通り"),
    (21, "仮運転免許は、第一種運転免許を受けようとする者が練習のため大型自動車、普通自動車又は大型特殊自動車を運転しようとする場合に必要な免許である。", "x", "大型特殊免許に仮免許はありません。"),
    (22, "車両は、交差点とその側端から５メートル以内の部分には、駐車も停車もしてはならない。", "o", "本文の通り"),
    (23, "図の警察官の灯火による信号の意味は、矢印の方向から接近する交通に対する信号機の赤色の灯火の信号と同じである。", "x", "警察官の際の状態に係わらず、警察官の体に対面（または背面）する交通は赤信号と同じ、警察官の体に平行する交通は警察官の腕が（灯火が）上がっていれば黄信号、それ以外は青信号の意味になります。"),
    (24, "「高齢者運転標識」をつけて走っている車を追い越してはならない。", "x", "本文の通り"),
    (25, "一般の通行車両が一方通行の道路で緊急自動車に進路をゆずる場合は、左側に寄るとかえってさまたげになるときは道路の右側に寄らなければならない。", "o", "本文の通り"),
    (26, "路面に図のような標示があるときは、その前方に交差点があることを示している。", "x", "本文の通り"),
    (27, "この標識は、「ロータリーあり」を表す警戒標識である。", "o", "ロータリー式交差点は数は少ないですが、たまにあります。通常とは違った右折方法になるので注意が必要です。"),
    (28, "自動車を運転して右折するときは、あらかじめその前からできる限り道路の中央に寄り、交差点の中心のすぐ内側（標識などによって、通行すべきところが指定されているときは、その指定されたところ）を徐行しなければならない。", "o", "本文の通り"),
    (29, "自動車を運転して追い越しを始めるときは、ハンドル操作を手ぎわよくするため、あらかじめ前車との車間距離を短くしてから始めるのがよい。", "x", "車間距離を詰めるのは危険です。安全な車間距離を保って追い越しをします。"),
    (30, "車両は、車両通行帯のある道路では、追い越しなどでやむを得ない場合のほかは二つの車両通行帯にまたがって通行してはならない。", "o", "本文の通り"),
    (31, "この標識は、「横断歩道」を表わしている。", "o", "設問の通りです。同じような子供二人が描かれた黄色の警戒標識（学校などあり）と混同しないように注意が必要です。"),
    (32, "交通整理中の警察官が腕を垂直に上げているとき、警察官の身体の正面に対面する交通については、信号機の赤色の灯火の信号と同じ意味である。", "o", "本文の通り"),
    (33, "車両等は、一時停止の標識があるときは停止線の直前で、停止線がないときは交差点の直前で一時停止しなければならない。", "o", "本文の通り"),
    (34, "一方通行の道路に駐停車するときは、道路の側端に沿って止めれば左右どちら側に駐停車してもよい。", "x", "一方通行の道路でも駐車は道路の左側端に沿って駐車します。「右側駐車可」の道路標識などがあるときだけ右側にも駐車できます。"),
    (35, "車両等は、横断歩道に近づいた場合、歩行者が横断しているときは一時停止しなければならないが、これから横断しようとしている場合は徐行すれば通行してもよい。", "x", "本文の通り"),
    (36, "６才未満の幼児を普通自動車に乗車させる際は、幼児の体型に応じた幼児用補助装置（チャイルドシート）を用いなければならない。", "o", "本文の通り"),
    (37, "自動車または原動機付自転車を運転中、横断歩道や自転車横断帯の手前で止まっている車があるときは、その側方を通過して前方に出る前に一時停止しなければならない。", "o", "本文の通り"),
    (38, "車両等の運転者は、やむなく坂道に車を止めて車から離れるときは、危険防止のため輪止めをしておかなければならない。", "o", "本文の通り"),
    (39, "普通貨物自動車（ミニカーを除く）の一般道路での法定最高速度は50キロメートル毎時である。", "x", "普通自動車（ミニカーを除く）の一般道路での最高速度は全て６０Kｍ/hです。"),
    (40, "正面の信号が青色のときは、車は直進し、左折し、右折することができる。", "x", "自動車は直進、左折、右折ができますが、軽車両は右折できません（二段階右折）。"),
    (41, "右折するときには内輪差は生じない。", "x", "左折も右折も内輪差は発生します。ただし、左折にくらべて右折の方が回転半径が大きい場合が多いので、内輪差は小さくなりますが内輪差がなくなる訳ではありません。"),
    (42, "歩道と車道の区別のない道路で、車が歩行者のそばを通るときは必ず徐行しなければならない。", "x", "本文の通り"),
    (43, "児童、幼児の乗り降りのため停止している通学・通園バスの側方を通るとき、バスとの間に安全な間隔がとれれば徐行しないで通ってもよい。", "x", "本文の通り"),
    (44, "この標識は、自動車の最高速度が、５０キロメートル毎時であることを表わしている。", "o", "本文の通り"),
    (45, "車両は一方通行になっている道路では道路の中央から右の部分にはみ出して通行することができる。", "o", "本文の通り"),
    (46, "バスや路面電車の停留所から10メートル以内は追い越しが禁止されている(運行時間外を除く)。", "x", "バスや路面電車の停留所から１０メートル以内では駐停車が禁止されていますが、追い越し禁止にはなっていません。"),
    (47, "この標識のある道路では、車庫などに入るため右横断をしてはならない。", "o", "この道路標識は道路に面した車庫に右折（直進）で進入したり、車庫から右折（直進）で道路に出ることを禁止する標識です。"),
    (48, "大型乗用自動車の一般道路での法定最高速度は60キロメートル毎時である。", "o", "本文の通り"),
    (49, "停止距離とは、ブレーキがきき始めてから車が停止するまでの距離をいう。", "x", "本文の通り"),
    (50, "車両は、歩道や路側帯のない道路では、道路の左側端に沿って駐車しなければならない。", "o", "本文の通り"),
]



    # Titleモデルに「チャレンジ１」を保存（タイトルが既に存在する場合は取得）
    title, created = Title.objects.get_or_create(name=title_name)

    # 質問データを保存
    for number, question_text, answer, descriptions,in question_list:
        Questions.objects.create(title=title, questions=question_text, answers=answer, number=number,descriptions=descriptions)

    return render(request, 'main_base.html')

